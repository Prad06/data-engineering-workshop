-- TABLE USED FOR FACT Data Modeling
SELECT
	*
FROM
	GAME_DETAILS;

-- Identifying the grain of the table (unique identifiers)
-- RUNNING THIS will give us the number of records in the table for each identifier
SELECT
	GAME_ID,
	TEAM_ID,
	PLAYER_ID,
	COUNT(1)
FROM
	GAME_DETAILS
GROUP BY
	1,
	2,
	3
HAVING
	COUNT(1) > 1;

-- Now that you have multiple records in a lot of cases, dedup is important to get rid of the duplicates
-- QUERY TO ONLY GET THE NON DUPLICATE RECORDS
WITH
	DEDUPED AS (
		SELECT
			*,
			ROW_NUMBER() OVER (
				PARTITION BY
					GAME_ID,
					TEAM_ID,
					PLAYER_ID
			) AS ROW_NUM
		FROM
			GAME_DETAILS
	)
SELECT
	*
FROM
	DEDUPED
WHERE
	ROW_NUM = 1;

-- JOIN WITH THE GAMES TABLE TO GET THE WHEN OUT OF THE FACT TABLE
-- IN THE PARTITION ADDING AN ORDER BY CLAUSE WILL MAKE SURE THAT DUPLICATES ARE NOT THERE
-- CREATE DDL BELOW
INSERT INTO
	FCT_GAME_DETAILS
WITH
	DEDUPED AS (
		SELECT
			G.GAME_DATE_EST,
			G.SEASON,
			G.HOME_TEAM_ID,
			GD.*,
			ROW_NUMBER() OVER (
				PARTITION BY
					GD.GAME_ID,
					TEAM_ID,
					PLAYER_ID
				ORDER BY
					G.GAME_DATE_EST
			) AS ROW_NUM
		FROM
			GAME_DETAILS GD
			JOIN GAMES G ON GD.GAME_ID = G.GAME_ID
	)
SELECT
	-- ADDING COLUMNS THAT WE CARE ABOUT IN FACT DATA
	GAME_DATE_EST AS DIM_GAME_DATE,
	SEASON AS DIM_SEASON,
	TEAM_ID AS DIM_PLAYER_ID,
	PLAYER_ID AS DIM_PLAYER_ID,
	PLAYER_NAME AS DIM_PLAYER_NAME, -- COULD HAVE BEEN SKIPPED BUT TO MAKE THE QUERIES LOOK NICER
	START_POSITION AS DIM_START_POSITION,
	TEAM_ID = HOME_TEAM_ID AS DIM_IS_PLAYING_AT_HOME,
	COALESCE(POSITION('DNP' IN COMMENT), 0) > 0 AS DIM_DID_NOT_PLAY,
	COALESCE(POSITION('DND' IN COMMENT), 0) > 0 AS DIM_DID_NOT_DRESS,
	COALESCE(POSITION('NWT' IN COMMENT), 0) > 0 AS DIM_NOT_WITH_TEAM,
	-- comment, -- CAN GET RID OF THIS AS WE HAVE PARSED IT
	CAST(SPLIT_PART(MIN, ':', 1) AS REAL) + CAST(SPLIT_PART(MIN, ':', 2) AS REAL) / 60 AS M_MINUTES,
	-- min, -- CAN GET RID OF THIS AS WE CONVERTED IT INTO AN ACTIONABLE TERM.
	FGM AS M_FGM,
	FGA AS M_FGA,
	FG3M AS M_FG3M,
	FG3A AS M_FG3A,
	FTM AS M_FTM,
	FTA AS M_FTA,
	OREB AS M_OREB,
	DREB AS M_DREB,
	REB AS M_REB,
	AST AS M_AST,
	STL AS M_STL,
	BLK AS M_BLK,
	"TO" AS M_TURNOVERS,
	PF AS M_PF,
	PTS AS M_PTS,
	PLUS_MINUS AS M_PLUS_MINUS
FROM
	DEDUPED
WHERE
	ROW_NUM = 1;

-- CREATING DDL
CREATE TABLE FCT_GAME_DETAILS (
	DIM_GAME_DATE DATE,
	DIM_SEASON INTEGER,
	DIM_TEAM_ID INTEGER,
	DIM_PLAYER_ID INTEGER,
	DIM_PLAYER_NAME TEXT,
	DIM_START_POSITION TEXT,
	DIM_IS_PLAYING_AT_HOME BOOLEAN,
	DIM_DID_NOT_PLAY BOOLEAN,
	DIM_DID_NOT_DRESS BOOLEAN,
	DIM_NOT_WITH_TEAM BOOLEAN,
	M_MINUTES REAL,
	M_FGM INTEGER,
	M_FGA INTEGER,
	M_FG3M INTEGER,
	M_FG3A INTEGER,
	M_FTM INTEGER,
	M_FTA INTEGER,
	M_OREB INTEGER,
	M_DREB INTEGER,
	M_REB INTEGER,
	M_AST INTEGER,
	M_STL INTEGER,
	M_BLK INTEGER,
	M_TURNOVERS INTEGER,
	M_PF INTEGER,
	M_PTS INTEGER,
	M_PLUS_MINUS INTEGER,
	PRIMARY KEY (DIM_GAME_DATE, DIM_TEAM_ID, DIM_PLAYER_ID)
);

SELECT
	DIM_PLAYER_NAME,
	SUM(
		CASE
			WHEN DIM_NOT_WITH_TEAM THEN 1
			ELSE 0
		END
	) AS TIMES_NWT,
	COUNT(*) AS TOTAL_GAMES_PLAYED,
	SUM(
		CASE
			WHEN DIM_NOT_WITH_TEAM THEN 1
			ELSE 0
		END
	) / COUNT(*)::NUMERIC AS BAILED_PCT
FROM
	FCT_GAME_DETAILS
GROUP BY
	1
ORDER BY
	4 DESC;